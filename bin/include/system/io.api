###############################################################################
### Copyright #################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
###############################################################################

import "system/error.api"
import "system/string.api"

# error code for a missing file
var ERR_FILE_NOT_FOUND: int

# a file text stream
class FILE (object)
    # closes this file
    # must be called by hand when finishing with a FILE
    # closing a file will free it and makes it a dangling reference, dont use that file anymore
    function close()
    
    # true if this file contains no more data
    function at_end() -> bool
    
    # writes 'value' into this file
    function put(value: char)
    
    # writes 'data' into this file
    function write(data: str)
    
    # fetches a single character from this file
    function fetch() -> char

# opens and returns the file pointed to by 'filename', or null on error
# mode must be 'r' for read mode or 'w' for write mode, file will be created/cleared if 'w' mode is requested
function open(filename: str, mode: char) -> FILE

# writes 'data' into console output (does not appends a newline)
function write(data: str)

# reads a line of input from the console
function read() -> str
