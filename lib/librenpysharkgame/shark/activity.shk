###############################################################################
### Copyright ##################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
################################################################################

import math

var renpy
var tuple
var ctransform

class activity
    function __init__()
        self.display = renpy.Render(320, 192)
    
    function draw(text, x, y)
        self.display.blit(text.render, tuple([x, y]))
    
    function draw_ex(text, x, y, origin_x, origin_y, rotation, scale_x, scale_y)
        var t = ctransform(text.render, rotation, scale_x, scale_y)
        var r = math.radians(rotation)
        var ox = (math.cos(r) * origin_x + math.sin(r) * origin_y) * scale_x
        var oy = (math.cos(r) * origin_y - math.sin(r) * origin_x) * scale_y
        x = x + ox - t.get_size()[0] / 2
        y = y + oy - t.get_size()[1] / 2
        self.display.blit(t, tuple([x, y]))
    
    function draw_text(text, font, x, y)
        pass
    
    function launch()
        pass
    
    function event(type, x, y)
        pass
    
    function update()
        pass
    
    function render()
        pass
