################################################################################
### Copyright ##################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
################################################################################

var EXIT_SUCCESS = SUCCESS
var EXIT_FAILURE = FAILURE

class strbuf
    function init()
        self.buffer = new string::strbuf ()
    
    function put(value)
        self.buffer.put(value)
    
    function write(data)
        self.buffer.puts(data)
    
    function get()
        return self.buffer.read_all()

class striter
    function init(data)
        self.data = data
        self.pos = 0
    
    function tell()
        return self.pos
    
    function seek(pos)
        self.pos = pos
    
    function next()
        var c = string::index(self.data, self.pos)
        self.pos += 1
        return c
    
    function empty()
        return self.pos >= string::len(self.data)

class strmap
    function init()
        self.data = { }
    
    function get(index)
        return self.data[index]
    
    function set(index, value)
        self.data[index] = value
    
    function has(index)
        return index in self.data
    
    function pop(index)
        return util::remove(self.data, index)

class FILE
    function init(stream)
        self.stream = stream
    
    function close()
        self.stream.close()
    
    function at_end()
        return self.stream.at_end()
    
    function put(value)
        self.stream.put(value)
    
    function write(data)
        self.stream.puts(data)
    
    function fetch()
        return self.stream.fetch()

var fopen = open

function open(filename, mode)
    var stream = fopen(filename, string::ctos(mode))
    if stream != null then
        return new FILE (stream)
    else
        return null

function write(data)
    puts(data)

class list
    function init()
        self.data = [ ]
    
    function size()
        return sizeof(self.data)
    
    function push(value)
        self.data << value
    
    function pop()
        return util::pop(self.data)
    
    function get(index)
        return self.data[index]
    
    function set(index, value)
        self.data[index] = value
