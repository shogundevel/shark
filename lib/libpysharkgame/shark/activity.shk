###############################################################################
### Copyright ##################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
################################################################################

import sys
import pygame
import math
import shark.event

pygame::init()

var DEFAULT_X_SIZE = 320
var DEFAULT_Y_SIZE = 192

var DESKTOP_SCALE_FACTOR = 3

var int

class activity
    function __init__()
        self.display = new pygame::Surface([DEFAULT_X_SIZE, DEFAULT_Y_SIZE])
    
    function draw(text, x, y)
        self.display.blit(text.surface, [x, y])
    
    function draw_ex(text, x, y, origin_x, origin_y, rotation, scale_x, scale_y)
        var flip_x = scale_x < 0
        var flip_y = scale_y < 0
        if flip_x then scale_x = -scale_x
        if flip_y then scale_y = -scale_y
        var t = pygame::transform::rotate(
            pygame::transform::scale(
                pygame::transform::flip(text.surface, flip_x, flip_y),
                [int(text.surface.get_width() * scale_x),
                int(text.surface.get_height() * scale_y)]),
            rotation)
        var r = math.radians(rotation)
        var ox = (math.cos(r) * origin_x + math.sin(r) * origin_y) * scale_x
        var oy = (math.cos(r) * origin_y - math.sin(r) * origin_x) * scale_y
        x = x + ox - t.get_width() / 2
        y = y + oy - t.get_height() / 2
        self.display.blit(t, [x, y])
    
    function draw_text(text, font, x, y)
        self.display.blit(font.font.render(text, 1, font.color), [x, y])
    
    function launch()
        pass
    
    function event(type, x, y)
        pass
    
    function text_event(text)
        pass
    
    function cancel_event()
        pass
    
    function update()
        pass
    
    function render()
        pass

function launch_activity (activity_class)
    var screen = pygame::display::set_mode([
        DEFAULT_X_SIZE * DESKTOP_SCALE_FACTOR,
        DEFAULT_Y_SIZE * DESKTOP_SCALE_FACTOR
    ])
    var activity = new activity_class ()
    var timer = new pygame::time::Clock()
    activity.launch()
    while true do
        event::dispatch(activity)
        activity::update()
        activity::render()
        screen.blit(pygame::transform::scale(activity.display, [
            DEFAULT_X_SIZE * DESKTOP_SCALE_FACTOR,
            DEFAULT_Y_SIZE * DESKTOP_SCALE_FACTOR]),
            [0, 0])
        pygame::display::flip()
        timer.tick(24)
