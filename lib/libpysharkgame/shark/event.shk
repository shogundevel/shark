###############################################################################
### Copyright ##################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
################################################################################

import sys
import pygame
import pygame: K_BACKSPACE, K_TAB, K_CLEAR, K_RETURN, K_PAUSE, K_ESCAPE, K_DELETE, K_UP, K_DOWN, K_RIGHT, K_LEFT, K_INSERT, K_HOME, K_END, K_PAGEUP, K_PAGEDOWN, K_F1, K_F2, K_F3, K_F4, K_F5, K_F6, K_F7, K_F8, K_F9, K_F10, K_F11, K_F12, K_F13, K_F14, K_F15, K_NUMLOCK, K_CAPSLOCK, K_SCROLLOCK, K_RSHIFT, K_LSHIFT, K_RCTRL, K_LCTRL, K_RALT, K_LALT, K_RMETA, K_LMETA, K_LSUPER, K_RSUPER, K_MODE, K_HELP, K_PRINT, K_SYSREQ, K_BREAK, K_MENU, K_POWER, K_EURO

var E_NONE = 0
var E_PRESS = 1
var E_MOVE = 2
var E_RELEASE = 3
var E_PRESS_UP = 4
var E_PRESS_DOWN = 5
var E_PRESS_LEFT = 6
var E_PRESS_RIGHT = 7
var E_PRESS_X = 8
var E_PRESS_Y = 9
var E_REL_UP = 10
var E_REL_DOWN = 11
var E_REL_LEFT = 12
var E_REL_RIGHT = 13
var E_REL_X = 14
var E_REL_Y = 15

var text_event = false

function set_text_event(status)
    text_event = status
    return true

var pressed = false

var NULL_KEYS = { K_BACKSPACE, K_TAB, K_CLEAR, K_RETURN, K_PAUSE,
              K_ESCAPE, K_DELETE, K_UP, K_DOWN, K_RIGHT, K_LEFT,
              K_INSERT, K_HOME, K_END, K_PAGEUP, K_PAGEDOWN,
              K_F1, K_F2, K_F3, K_F4, K_F5, K_F6, K_F7, K_F8, K_F9,
              K_F10, K_F11, K_F12, K_F13, K_F14, K_F15, K_NUMLOCK,
              K_CAPSLOCK, K_SCROLLOCK, K_RSHIFT, K_LSHIFT, K_RCTRL,
              K_LCTRL, K_RALT, K_LALT, K_RMETA, K_LMETA, K_LSUPER,
              K_RSUPER, K_MODE, K_HELP, K_PRINT, K_SYSREQ, K_BREAK,
              K_MENU, K_POWER, K_EURO }

function dispatch(consumer)
    while true do
        var event = pygame::event::poll()
        if event.type == pygame::NOEVENT then
            return null
        else if event.type == pygame::MOUSEBUTTONDOWN and event.button == 1 then
            pressed = true
            consumer.event(E_PRESS, event.pos[0], event.pos[1])
        else if event.type == pygame::MOUSEBUTTONUP and event.button == 1 then
            pressed = false
            consumer.event(E_RELEASE, event.pos[0], event.pos[1])
        else if event.type == pygame::MOUSEBUTTONDOWN and event.button == 4 then
            consumer.event(E_ROLL_UP, event.pos[0], event.pos[1])
        else if event.type == pygame::MOUSEBUTTONDOWN and event.button == 5 then
            consumer.event(E_ROLL_DOWN, event.pos[0], event.pos[1])
        else if event.type == pygame::MOUSEMOTION and pressed then
            consumer.event(E_MOVE, event.pos[0], event.pos[1])
        else if event.type == pygame::KEYDOWN then
            if not text_event and event.key == pygame::K_z then
                consumer.event(E_PRESS_X, 0, 0)
            else if not text_event and event.key == pygame::K_x then
                consumer.event(E_PRESS_Y, 0, 0)
            else if event.key == pygame::K_RETURN then
                consumer.event(E_PRESS_X, 0, 0)
            else if event.key == pygame::K_BACKSPACE then
                consumer.event(E_PRESS_Y, 0, 0)
            else if event.key == pygame::K_UP then
                consumer.event(E_PRESS_UP, 0, 0)
            else if event.key == pygame::K_DOWN then
                consumer.event(E_PRESS_DOWN, 0, 0)
            else if event.key == pygame::K_LEFT then
                consumer.event(E_PRESS_LEFT, 0, 0)
            else if event.key == pygame::K_RIGHT then
                consumer.event(E_PRESS_RIGHT, 0, 0)
            else if event.key not in NULL_KEYS then
                consumer.text_event(event.unicode)
        else if event.type == pygame::KEYUP then
            if not text_event and event.key == pygame::K_z then
                consumer.event(E_REL_X, 0, 0)
            else if not text_event and event.key == pygame::K_x then
                consumer.event(E_REL_Y, 0, 0)
            else if event.key == pygame::K_RETURN then
                consumer.event(E_REL_X, 0, 0)
            else if event.key == pygame::K_BACKSPACE then
                consumer.event(E_REL_Y, 0, 0)
            else if event.key == pygame::K_UP then
                consumer.event(E_REL_UP, 0, 0)
            else if event.key == pygame::K_DOWN then
                consumer.event(E_REL_DOWN, 0, 0)
            else if event.key == pygame::K_LEFT then
                consumer.event(E_REL_LEFT, 0, 0)
            else if event.key == pygame::K_RIGHT then
                consumer.event(E_REL_RIGHT, 0, 0)
            else if event.key not in NULL_KEYS then
                consumer.cancel_event()
        else if event.type == pygame::QUIT then
            pygame::quit()
            sys::exit(0)
        else
            continue
