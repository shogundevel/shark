###############################################################################
### Copyright ##################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
################################################################################

import sys
import pygame
import math
import shuriken.event

pygame::init()

var DEFAULT_X_SIZE = 640
var DEFAULT_Y_SIZE = 480

var int

class activity
    function __init__()
        self.display = new pygame::Surface([DEFAULT_X_SIZE, DEFAULT_Y_SIZE])
    
    function draw(text, x, y)
        self.display.blit(text.surface, [x, y])
    
    function launch(size_x, size_y)
        pass
    
    function event(type, x, y, char)
        pass
    
    function update()
        pass
    
    function render()
        pass

function launch_activity (activity_class, size_x, size_y)
    var screen = pygame::display::set_mode([
        size_x,
        size_y
    ])
    var activity = new activity_class ()
    var timer = new pygame::time::Clock()
    activity.launch(size_x, size_y)
    while true do
        event::dispatch(activity)
        activity::update()
        activity::render()
        screen.blit(activity.display, [0, 0])
        pygame::display::flip()
        timer.tick(24)
