###############################################################################
### Copyright ##################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
################################################################################

var ERR_INVALID_LITERAL = 2
var CHAR_SIZE = 4

var str

function itos(x)
    return str(x)

function ftos(x)
    return str(x)

function ctos(x)
    return x

var ppcall
var int
var float

function stoi(x)
    return ppcall(int, [x])

function stof(x)
    return ppcall(float, [x])

function islower(x)
    return x >= 'a' and x <= 'z'

function isupper(x)
    return x >= 'A' and x <= 'Z'

function isalpha(x)
    return islower(x) or isupper(x)

function isdigit(x)
    return x >= '0' and x <= '9'

function isalnum(x)
    return isalpha(x) or isdigit(x)

function isident(x)
    return isalnum(x) or x == '_'

function ishex(x)
    return isdigit(x) or (x >= 'a' and x <= 'f') or (x >= 'A' and x <= 'F')

function isascii(x)
    return sizeof(x.encode()) == 1

function issurrogate(x)
    return false

function tolower(x)
    return x.tolower()

function toupper(x)
    return x.toupper()

var len

function index(data, index)
    return data[index]

var pslice
var slice = pslice

function find(x, y)
    return x.find(y)

function concat(x, y)
    return x + y

function join(sep, args)
    return sep.join(args)

function split(s, sep)
    return s.split(sep)

var pformat

function format(x, y)
    return pformat(x, y)

var eval
var repr

function normal(data)
    return eval(data)

function quote(data)
    return repr(data)

var strbuf
var cbytes
var bytes = cbytes
var bytearray

function encode(data)
    var bytebuf = new bytes ()
    bytebuf.buffer = new bytearray (data.encode())
    return bytebuf

function decode(data)
    return data.buffer.decode()
