###############################################################################
### Copyright ##################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
################################################################################

var current_object
var objects
var prev_objects

var text_label
var text_data
var text_rect

class activity
    function init()
        pass
    
    function draw(text, x, y)
        var object_id = sizeof(objects)
        var object = null
        if object_id >= sizeof(prev_objects) then
            object = current_object.createEmptyMovieClip("new_movie", current_object.getNextHighestDepth())
            prev_objects.push(object)
        else
            object = prev_objects[object_id]
        objects.push(object)
        object.beginBitmapFill(text.data)
        object.lineTo(text.get_size_x(), 0)
        object.lineTo(text.get_size_x(), text.get_size_y())
        object.lineTo(0, text.get_size_y())
        object.lineTo(0, 0)
        object.endFill()
        object._x = x
        object._y = y
    
    function draw_ex(text, x, y, origin_x, origin_y, rotation, scale_x, scale_y)
        pass
    
    function draw_text(text, font, x, y)
        var object_id = sizeof(objects)
        var object = null
        if object_id >= sizeof(prev_objects) then
            object = current_object.createEmptyMovieClip("new_movie", current_object.getNextHighestDepth())
            prev_objects.push(object)
        else
            object = prev_objects[object_id]
        objects.push(object)
        text_label.text = text
        text_data.fillRect(text_rect, 0)
        text_data.draw(text_label)
        object.beginBitmapFill(text_data)
        object.lineTo(320, 0)
        object.lineTo(320, 24)
        object.lineTo(0, 24)
        object.lineTo(0, 0)
        object.endFill()
        object._x = x
        object._y = y
    
    function launch()
        pass
    
    function event(type, x, y)
        pass
    
    function update()
        pass
    
    function render()
        pass
