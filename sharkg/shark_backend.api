###############################################################################
### Copyright #################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
###############################################################################

import "system/io.api"
import "system/string.api"

import "shark_nodes.api"

function shark_null_stat() -> object

class shark_backend (object)
    function shark_backend()
    function begin(out: str)
    function close()
    function enter_type_decl(type: shark_custom_type)
    function exit_type_decl()
    function enter_type_impl(type: shark_custom_type)
    function exit_type_impl()
    function var_decl(name: str, type: shark_type)
    function global_var_decl(name: str, type: shark_type, value: bool)
    function declare_constructor(function_object: shark_function)
    function declare_method(function_object: shark_function)
    function declare_function(function_object: shark_function)
    function close_function_declaration()
    function enter_function(function_object: shark_function)
    function exit_function()
    function inline_stat(code: str)
    function enter_block()
    function empty_block()
    function exit_block()
    function if_stat()
    function enter_else_if()
    function else_if()
    function else_clause()
    function close_if()
    function close_else_if()
    function enter_select()
    function select_stat()
    function enter_select_case(value: str)
    function exit_select_case()
    function enter_select_else()
    function exit_select()
    function enter_while()
    function while_stat()
    function exit_while()
    function enter_for()
    function for_init(name: str, type: shark_type)
    function for_cond()
    function for_step()
    function for_stat()
    function exit_for()
    function break_stat()
    function continue_stat()
    function return_stat(value: bool)
    function assign_stat()
    function enter_assign()
    function enter_binop()
    function binary_op(op: str, strop: bool, objop: bool)
    function unary_op(op: str)
    function enter_index()
    function inc_index(op: str, type: shark_type)
    function set_index(op: str, type: shark_type)
    function get_index(type: shark_type)
    function call_method(function_object: shark_function)
    function enter_call()
    function push_arg()
    function inc_field(field: shark_variable, op: str)
    function set_field(field: shark_variable, op: str)
    function get_field(field: shark_variable)
    function inc_local(name: str, op: str)
    function set_local(name: str, op: str)
    function get_local(name: str)
    function call_function(name: str)
    function inc_global(name: str, op: str)
    function set_global(name: str, op: str)
    function get_global(name: str)
    function self_exp()
    function sizeof_exp()
    function array_new(type: shark_type)
    function object_new(type: shark_custom_type)
    function instanceof_exp(type: shark_custom_type)
    function cast_exp(type: shark_type)
    function nested_exp()
    function null_exp()
    function true_exp()
    function false_exp()
    function int_exp(value: str)
    function float_exp(value: str)
    function char_exp(value: str)
    function str_exp(value: str)
