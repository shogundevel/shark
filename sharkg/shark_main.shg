###############################################################################
### Copyright #################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
###############################################################################

import "system/io.api"

import "shark_path.shg"
import "shark_lexer.shg"
import "shark_nodes.shg"
import "shark_backend.shg"
import "shark_backend_c.shg"
import "shark_backend_java.shg"
import "shark_backend_javascript.shg"
import "shark_backend_lua.shg"
import "shark_backend_python.shg"
import "shark_backend_shark.shg"
import "shark_compiler.shg"

function main(args: [] str)
    if sizeof(args) < 4 then
        write("usage: ")
        write(args[0])
        write(" <backend> <filename> <out> <include>\n")
        write("\tCompiles the given <filename> to <out>.\n")
        write("\t<backend> can be any of <c | java | py | lua | js | shk>.\n")
        write("\t<include> can be zero or more directories to search for include files.")
        return
    else
        var root: str = shark_path_get_base(args[0])
        var target: str = args[1]
        var filename: str = args[2]
        var compiler: shark_compiler = new shark_compiler ()
        var include: list = new list ()
        include.push(shark_path_join(root, "include"))
        include.push(shark_path_get_base(filename))
        for i: int = 4, i < sizeof(args), i++ do
            include.push(args[i])
        var backend: shark_backend = null
        if target == "c" then
            backend = new shark_backend_c ()
        else if target == "java" then
            backend = new shark_backend_java ()
        else if target == "js" then
            backend = new shark_backend_javascript ()
        else if target == "lua" then
            backend = new shark_backend_lua ()
        else if target == "py" then
            backend = new shark_backend_python ()
        else if target == "shk" then
            backend = new shark_backend_shark ()
        else
            write("can't recognize the desired backend '")
            write(target)
            write("', compilation aborted.")
            return
        compiler.compile(filename, include, backend, args[3])
        write("====\ncompilation finished")
