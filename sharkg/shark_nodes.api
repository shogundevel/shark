###############################################################################
### Copyright #################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
###############################################################################

import "system/data.api"

class shark_namespace (object)
    var parent: shark_namespace
    var table: strmap
    var data: list
    
    function shark_namespace(parent: shark_namespace)
    
    function add(name: str, value: object)
    function has(name: str) -> bool
    function get(name: str) -> object

class shark_type (object)
    function shark_type()
    function equals(other: shark_type) -> bool
    function get_cast(other: shark_type) -> bool

class shark_basic_type (shark_type)
    var name: str
    
    function shark_basic_type(name: str)

class shark_basic_any_type (shark_basic_type)
    function shark_basic_any_type()

var shark_basic_type_void: shark_type
var shark_basic_type_bool: shark_type
var shark_basic_type_int: shark_type
var shark_basic_type_float: shark_type
var shark_basic_type_char: shark_type
var shark_basic_type_str: shark_type
var shark_basic_type_any: shark_type

var shark_compiler_basic_types: shark_namespace

class shark_custom_type (shark_type)
    var name: str
    var parent: shark_custom_type
    var implemented: bool
    var namespace: shark_namespace
    var fields: list
    var methods: list
    var constructor: object
    
    function shark_custom_type(name: str, parent: shark_custom_type)
    function issubtype(other: shark_custom_type) -> bool

class shark_array_type (shark_type)
    var type: shark_type
    
    function shark_array_type(type: shark_type)

function shark_object_get_name(value: object) -> str

class shark_variable (object)
    var name: str
    var type: shark_type
    var source_type: shark_custom_type
    
    function shark_variable(name: str, type: shark_type)

class shark_function (object)
    var name: str
    var root_type: shark_custom_type
    var source_type: shark_custom_type
    var arg_names: list
    var arg_types: list
    var type: shark_type
    var implemented: bool
    
    function shark_function(name: str, source_type: shark_custom_type,
        arg_names: list, arg_types: list, type: shark_type)
